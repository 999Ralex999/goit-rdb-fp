p.1.1. - CREATE DATABASE pandemic;p.1.2. Ð Import csvp.1.3. - SELECT * FROM pandemic.infectious_cases;p.2.1. - USE pandemic; CREATE TABLE countries( id INT PRIMARY KEY                 AUTO_INCREMENT, code VARCHAR(8) UNIQUE, country VARCHAR(32) NOT                  NULL UNIQUE );p.2.2. - INSERT INTO countries (code, country) SELECT DISTINCT code, entity FROM                infectious_cases;p.2.2.1. - SELECT * FROM pandemic.countries;p.2.3. - USE pandemic;               CREATE TABLE infectious_cases_normalized (              id INT PRIMARY KEY AUTO_INCREMENT,              Year YEAR,              Number_yaws INT,              polio_cases INT,              cases_guinea_worm INT,              Number_rabies FLOAT,              Number_malaria FLOAT,              Number_hiv FLOAT,              Number_tuberculosis FLOAT,              Number_smallpox FLOAT,              Number_cholera_cases FLOAT,              country_id INT,              FOREIGN KEY (country_id) REFERENCES countries(id));p.2.4. - DROP FUNCTION IF EXISTS StringToFloat;             DELIMITER //             CREATE FUNCTION StringToFloat(input_string VARCHAR(100)) RETURNS FLOAT             DETERMINISTIC             NO SQL             BEGIN             DECLARE result FLOAT;             SET result = CAST(input_string AS FLOAT);             RETURN result;             END //             DELIMITER ;p.2.5 - INSERT INTO infectious_cases_normalized (country_id, Year, Number_yaws,           polio_cases, cases_guinea_worm, Number_rabies, Number_malaria, Number_hiv,               Number_tuberculosis, Number_smallpox, Number_cholera_cases) SELECT            countries.id AS country_id, infectious_cases.Year,           StringToFloat(infectious_cases.Number_yaws) AS Number_yaws,           StringToFloat(infectious_cases.polio_cases) AS polio_cases,           StringToFloat(infectious_cases.cases_guinea_worm) AS cases_guinea_worm,           StringToFloat(infectious_cases.Number_rabies) AS Number_rabies,           StringToFloat(infectious_cases.Number_malaria) AS Number_malaria,           StringToFloat(infectious_cases.Number_hiv) AS Number_hiv,           StringToFloat(infectious_cases.Number_tuberculosis) AS Number_tuberculosis,           StringToFloat(infectious_cases.Number_smallpox) AS Number_smallpox,           StringToFloat(infectious_cases.Number_cholera_cases) AS           Number_cholera_cases FROM infectious_cases INNER JOIN countries ON           infectious_cases.Entity = countries.country;p.2.6 - SELECT * FROM pandemic.infectious_cases_normalized;p.3. - USE pandemic;          SELECT countries.country, countries.code,         AVG(infectious_cases_normalized.Number_rabies) AS average_number_rabies,         MIN(infectious_cases_normalized.Number_rabies) AS min_number_rabies,         MAX(infectious_cases_normalized.Number_rabies) AS max_number_rabies,         SUM(infectious_cases_normalized.Number_rabies) AS sum_number_rabies         FROM infectious_cases_normalized         INNER JOIN countries ON infectious_cases_normalized.country_id = countries.id         WHERE infectious_cases_normalized.Number_rabies IS NOT NULL        GROUP BY countries.country, countries.code        ORDER BY average_number_rabies DESC        LIMIT 10;p.4.1. - USE pandemic;              SELECT MAKEDATE(Year, 1) as first_day_of_the_year             FROM infectious_cases_normalized;p.4.2. - USE pandemic;              SELECT CURDATE(), Year              FROM infectious_cases;p.4.3. Ð USE pandemic;             SELECT Year, TIMESTAMPDIFF(YEAR, MAKEDATE(Year, 1), NOW()) AS years_diff                FROM infectious_cases;p.5.1 - USE pandemic;             DROP FUNCTION IF EXISTS YearsToNow;            DELIMITER //            CREATE FUNCTION YearsToNow(input_year YEAR) RETURNS INT            DETERMINISTIC            NO SQL            BEGIN            DECLARE result INT;            SET result = TIMESTAMPDIFF(YEAR, MAKEDATE(input_year, 1), NOW());            RETURN result;            END             //DELIMITER ;SELECT Year, YearsToNow(Year) AS years_diffFROM infectious_cases;p.5.2 - USE pandemic;            DROP FUNCTION IF EXISTS CalcIllnessesInMonthPeriod;           DELIMITER //           CREATE FUNCTION CalcIllnessesInMonthPeriod(illnesses_per_year FLOAT,           months INT) RETURNS FLOAT            DETERMINISTIC           NO SQL           BEGIN           DECLARE result FLOAT;           SET result = illnesses_per_year / months;           RETURN result;          END           //DELIMITER ; SELECT id, CalcIllnessesInMonthPeriod(Number_malaria, 12) AS malaria_per_monthFROM infectious_cases_normalized;